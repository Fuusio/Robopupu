apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

ext {
    PUBLISH_GROUP_ID = 'com.robopupu'
    PUBLISH_ARTIFACT_ID = 'robopupu'
    PUBLISH_VERSION = '0.5.7'
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.0'
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 2
        versionName '0.5.7'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:25.2.0'
    compile 'com.android.support:support-v4:25.2.0'
    compile 'com.android.support:design:25.2.0'
    compile 'com.google.code.gson:gson:2.8.0'

    testCompile 'junit:junit:4.12'

    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude group: 'javax.inject'
        exclude group: 'org.mockito'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    debugCompile('com.google.dexmaker:dexmaker-mockito:1.2') {
        exclude group: 'org.hamcrest'
    }
    debugCompile('com.google.dexmaker:dexmaker:1.2') {
        exclude group: 'org.hamcrest'
    }
    debugCompile('org.mockito:mockito-core:1.10.19') {
        exclude group: 'org.hamcrest'
    }
}

String java8 = getJavaVersion(8)
String java7 = getJavaVersion(7)

retrolambda {
    jdk java8
    oldJdk java7
}

String getJavaVersion(Integer version) {
    def buffer = new StringBuffer()
    def process = "/usr/libexec/java_home -v 1.$version".execute()
    process.consumeProcessOutput(buffer, new StringBuffer())
    process.waitForOrKill(1000)
    return buffer.toString().replace("\n", "").replace("\r", "")
}

apply from: 'https://raw.githubusercontent.com/blundell/release-android-library/master/android-release-aar.gradle'



