apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.0'
    defaultConfig {
        applicationId 'com.robopupu'
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 4
        versionName '1.0.3'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }
    lintOptions {
        abortOnError false
    }
}

repositories {
    // maven { url 'https://dl.bintray.com/robopupu/maven/' }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    // LIBRARY DEV
    compile project(':robopupu-api')
    apt files('libs/robopupu-compiler.jar')

    // JCENTER TESTING
    // compile 'com.robopupu:robopupu:0.5.1'
    // apt 'com.robopupu:robopupu-compiler:0.5.1'

    apt 'com.squareup:javapoet:1.7.0'

    testCompile 'junit:junit:4.12'

    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude group: 'javax.inject'
        exclude group: 'org.mockito'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    debugCompile('com.google.dexmaker:dexmaker-mockito:1.2') {
        exclude group: 'org.hamcrest'
    }
    debugCompile('com.google.dexmaker:dexmaker:1.2') {
        exclude group: 'org.hamcrest'
    }
    debugCompile('org.mockito:mockito-core:1.10.19') {
        exclude group: 'org.hamcrest'
    }

    // Leak Canary
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'

    // Google Volley
    compile 'com.android.volley:volley:1.0.0'

    // Support Libraries
    compile 'com.android.support:appcompat-v7:25.2.0'
    compile 'com.android.support:support-v4:25.2.0'
    compile 'com.android.support:design:25.2.0'
    compile 'com.android.support:cardview-v7:25.2.0'
    compile 'com.squareup.picasso:picasso:2.5.2'

    // RxJava
    // compile 'io.reactivex:rxandroid:1.1.0'
    // compile 'io.reactivex:rxjava:1.1.3'

    // Retrofit 2
    //compile 'com.squareup.retrofit2:retrofit:2.1.0'
    //compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    //compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    // compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
    compile 'com.google.code.gson:gson:2.7'
}

String java8 = getJavaVersion(8)
String java7 = getJavaVersion(7)

retrolambda {
    jdk java8
    oldJdk java7
}

String getJavaVersion(Integer version) {
    def sout = new StringBuffer()
    def exec = "/usr/libexec/java_home -v 1.$version".execute()
    exec.consumeProcessOutput(sout, new StringBuffer())
    exec.waitForOrKill(1000)
    return sout.toString().replace("\n", "").replace("\r", "")
}
